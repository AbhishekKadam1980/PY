#OBJECT ORIENTED PROGRAMMING
#ANY FUNCTION WHICH IS A PART OF A CLASS IS CALLED A METHOD


#CREATING A SIMPLE CLASS

# PYTHON RUNS THE __INIT__ METHOD FIRST WHENEVER A NEW INSTANCE OF THE DOG CLASS IS MADE
# THE __ MAKES SURE THAT PYTHON DOES NOT MIX UP USER DEFINED AND SYSTEM DEFINED METHODS
# EVERY METHOD CALL ASSOCIATED WITH A CLASS AUTOMATICALLY PASSES THE SELF ARGUMENT
#SELF GIVES THE

class Dog():
    #EVERY METHOD CALL ASSOCIATED WITH A CLASS AUTOMATICALLY PASSES SELF WHICH IS A REFERENCE TO THE INSTANCE ITSELF
    #SELF GIVES THE INDIVIDUAL INSTANCE ACCESS TO THE ATTRIBUTES AND METHODS IN THAT CLASS
    #IT IS THE __INIT__ METHOD IN PARTICULAR WHICH WILL CREATE AN INSTANCE
    def __init__(self, name, age):
    #ANY VARIABLE PREFIXED WITH SELF IS AVAILABLE TO EVERY METHOD IN THE CLASS
        self.name = name
        self.age = age
    def sit(self):
        print(self.name.title()+"is now sitting")
    def roll(self):
        print(self.name.title()+"has just rolled over")


#MAKING AN INSTANCE FROM A CLASS
my_dog = Dog('willie',6)
print("My dogs name is "+ my_dog.name.title()+".")
print("My dog is "+ str(my_dog.age) +" years old.")




